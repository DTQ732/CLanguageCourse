C语言
	欢迎来到C语言的世界。C是一门功能强大的专业化编程语言，深受业余编程爱好者和专业程序员的喜爱。
	本章为读者学习这一强大而流行的语言打好基础，并介绍几种开发C程序最可能使用的环境。
	我们先来了解C语言的起源和一些特性，包括它的优缺点。然后，介绍编程的起源并探讨一些编程的基本原则。
	最后，讨论如何在一些常见系统中运行C程序。
1.1 选择C语言的理由
1.1.1 设计特性
	C是一门流行的语言，融合了计算机科学理论和实践的控制特性。C语言的设计理念让用户能轻松地完成自顶向下的规划、结构化编程和模块化设计。
	因此，用C语言编写的程序更易懂、更可靠。
1.1.2 高效性
	C是高效的语言。它充分利用了当前计算机的优势，因此C程序相对更紧凑，而且运行速度很快。
	实际上，C语言具有通常是汇编语言才具有的微调能力（汇编语言是为特殊中央处理单元设计的一系列内部指令，使用助记符来表示；
	不同的CPU系列使用不同的汇编语言），可以根据具体情况微调程序以获得最大运行速度或最有效地使用内存。
1.1.3 可移植性
	C是可移植的语言。这意味着，在一种系统中编写的C程序稍作修改或不修改就能在其他系统运行。
	如需修改，也只需简单更改主程序头文件中的少许项即可。
	大部分语言都希望成为可移植语言，但是，如果经历过把 IBM PC BASIC程序转换成苹果BASIC(两者是近亲)，
	或者在UNIX系统中运行IBM大型机的FORTRAN程序的人都知道，移植是最麻烦的事。
	C语言是可移植方面的佼佼者。从8位微处理器到克雷超级计算机,许多计算机体系结构都可以使用C编译器(C编译器是把C代码转换成计算机内部指令的程序)。
	但是要注意，程序中针对特殊硬件设备(如，显示监视器）或操作系统特殊功能(如，Windows 8或OS X)编写的部分，通常是不可移植的。
	由于C语言与UNIX关系密切，UNIX系统通常会将C编译器作为软件包的一部分，安装linux时，通常也会安装C编译器。
	供个人计算机使用的C编译器很多，运行各种版本的Windows和Macintosh（即Mac）的PC都能找到合适的C编译器。
	因此，无论是使用家庭计算机，专业工作站，还是大型机，都能找到针对特定系统的C编译器。
1.1.4 强大而灵活
	C语言功能强大且灵活（计算机领域经常使用这两个词)。例如，功能强大且灵活的UNIX操作系统，大部分是用C语言写的;其他语言（如，FORTRAN、Perl、
	Python、Pascal、LISP、Logo、BASIC)的许多编译器和解释器都是用C语言编写的。因此，在UNIX机上使用FORTRAN时，最终是由C程序生成最后的可执行程序。
	C程序可以用于解决物理学和工程学的问题，甚至可用于制作电影的动画特效。
1.1.5 面向程序员
	C语言是为了满足程序员的需求而设计的，程序员利用C可以访问硬件、操控内存中的位。C语言有丰富的运算符，能让程序员简洁地表达自己的意图。
	C没有 Pascal严谨，但是却比C++的限制多。这样的灵活性既是优点也是缺点。优点是，许多任务用C来处理都非常简洁（如，转换数据的格式);缺点是，
	你可能会犯一些莫名其妙的错误，这些错误不可能在其他语言中出现。C语言在提供更多自由的同时，也让使用者承担了更大的责任。
	另外，大多数C实现都有一个大型的库，包含众多有用的C函数。这些函数用于处理程序员经常需要解决的问题。
1.1.6 缺点
	人无完人，金无足赤。C语言也有一些缺点。例如，前面提到的，要享受用C语言自由编程的乐趣，就必须承担更多的责任。
	特别是，C语言使用指针，而涉及指针的编程错误往往难以察觉。有句话说的好:想拥有自由就必须时刻保持警惕。
	语言紧凑简洁，结合了大量的运算符。正因如此，我们也可以编写出让人极其费解的代码。虽然没必要强迫自己编写晦涩的代码，但是有兴趣写写也无妨。
	试问，除C语言外还为哪种语言举办过年度混乱代码大赛?
	
	瑕不掩瑜，C语言的优点比缺点多很多。我们不想在这里多费笔墨，还是来聊聊C语言的其他话题。